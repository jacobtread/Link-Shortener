#!/usr/bin/env node
require('dotenv').config(); // Load the .env config
const app = require('../app/index');
const http = require('http');

function normalize(port) {
    const parsed = parseInt(port, 10);
    if (isNaN(parsed)) return port;
    if (port >= 0) return parsed;
    console.error('Invalid port using 8080')
    return 8080;
}

const port = normalize(process.env.PORT || '3000');
app.set('port', port);
const server = http.createServer(app);
server.listen(port);
server.on('error', onError);
server.on('listening', onListening);

function onListening() {
    const addr = server.address();
    const bind = typeof addr === 'string'
        ? 'pipe ' + addr
        : 'port ' + addr.port;
    console.log('Listening on ' + bind);
}

function onError(error) {
    if (error.syscall !== 'listen') throw error;
    const bind = typeof port === 'string' ? 'Pipe ' + port : 'Port ' + port;
    switch (error.code) {
        case 'EACCES':
            console.error(bind + ' requires elevated privileges');
            process.exit(1);
            break;
        case 'EADDRINUSE':
            console.error(bind + ' is already in use');
            process.exit(1);
            break;
        default:
            throw error;
    }
}
